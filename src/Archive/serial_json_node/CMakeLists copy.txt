cmake_minimum_required(VERSION 3.8)
project(serial_json_node)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# ‚õìÔ∏è Dipendenze ROS e di sistema
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(std_msgs REQUIRED)
find_package(sensor_msgs REQUIRED)

find_package(nlohmann_json REQUIRED)
find_package(asio_cmake_module REQUIRED)

#find_package(ament_cmake REQUIRED)
#ament_package()
# Aggiunge il prefix locale alla lista di ricerca
list(INSERT CMAKE_PREFIX_PATH 0
     "${CMAKE_CURRENT_SOURCE_DIR}/../serial/build"
)
#find_package(serial REQUIRED)       
find_package(Threads REQUIRED)

#include_directories(${Asio_INCLUDE_DIRS})

# üöÄ Eseguibile principale
add_executable(serial_json_node 
#  src/main.cpp
  src/serial_json_node.cpp
)

# üìé Include directory (libserial √® gi√† in /usr/include)
#target_include_directories(serial_json_node 
#  PUBLIC
#  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
#  $<INSTALL_INTERFACE:include>
#)
target_include_directories(serial_json_node PUBLIC /home/ws/src/serial-ros2/include)


# üîó Link manuale per libreria di sistema
target_link_libraries(serial_json_node
  /home/ws/src/serial-ros2/build/libserial.a
  Threads::Threads
)


# üì¶ Dipendenze ROS gestite da ament
ament_target_dependencies(serial_json_node
  rclcpp
  std_msgs
  sensor_msgs
  nlohmann_json
  #serial
)

# üîß Abilitazione delle feature del compilatore
target_compile_features(serial_json_node PUBLIC c_std_99 cxx_std_17)

# üì§ Installazione
install(TARGETS serial_json_node
  DESTINATION lib/${PROJECT_NAME}
)


# üß™ Testing & linting
if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  set(ament_cmake_copyright_FOUND TRUE)
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()


install(
  DIRECTORY launch/
  DESTINATION share/${PROJECT_NAME}/launch
)

# Install config files
install(
  DIRECTORY config/
  DESTINATION share/${PROJECT_NAME}/config
)


# üì¶ Pacchetto finale
ament_package()